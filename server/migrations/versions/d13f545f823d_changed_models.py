"""changed models

Revision ID: d13f545f823d
Revises: c674d696ac42
Create Date: 2024-11-04 09:23:00.911245

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd13f545f823d'
down_revision = 'c674d696ac42'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('links')
    op.drop_table('authors')
    op.drop_table('book_authors')
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('key',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.drop_column('author')

    with op.batch_alter_table('books_in_lists', schema=None) as batch_op:
        batch_op.alter_column('book_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('list_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('fk_books_in_lists_user_id_users', type_='foreignkey')
        batch_op.drop_column('book_cover')
        batch_op.drop_column('user_id')
        batch_op.drop_column('book_name')

    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('books_in_lists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('book_name', sa.VARCHAR(), nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('book_cover', sa.VARCHAR(), nullable=True))
        batch_op.create_foreign_key('fk_books_in_lists_user_id_users', 'users', ['user_id'], ['id'])
        batch_op.alter_column('list_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('book_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('author', sa.VARCHAR(), nullable=True))
        batch_op.alter_column('description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
        batch_op.alter_column('key',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(),
               nullable=True)

    op.create_table('book_authors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book_id', sa.INTEGER(), nullable=True),
    sa.Column('author_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name='fk_book_authors_author_id_authors'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='fk_book_authors_book_id_books'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('authors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('birth_date', sa.VARCHAR(), nullable=True),
    sa.Column('bio', sa.VARCHAR(), nullable=True),
    sa.Column('work_count', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('links',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book_key', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('url', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['book_key'], ['books.key'], name='fk_links_book_key_books'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    # ### end Alembic commands ###
